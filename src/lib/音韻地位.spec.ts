import test from 'ava';

import { decode, iter音韻地位, query字頭, 音韻地位 } from './音韻地位';

// 1. 由字頭查出相應的音韻地位和解釋

test('查詢「之」字', (t) => {
  const res = query字頭('之');
  t.is(res.length, 1);
  t.is(res[0].音韻地位.描述, '章開三之平');
  t.is(res[0].解釋, '適也往也閒也亦姓出姓苑止而切四');
});

test('查詢「過」字。「過」字有兩讀', (t) => {
  const res = query字頭('過');
  t.is(res.length, 2);
});

test('查詢不存在的字，沒有讀音', (t) => {
  const res = query字頭('!');
  t.is(res.length, 0);
});

// 2. 由音韻地位查出相應的字頭和解

test('查音韻地位「見合一歌平」，含「戈」、「過」等字', (t) => {
  const 當前音韻地位 = new 音韻地位('見', '合', '一', null, '歌', '平'); // 注意：戈韻不獨立，屬歌韻
  t.is(當前音韻地位.條目.length > 0, true);
});

test('查音韻地位「從合三歌平」，有音無字', (t) => {
  const 當前音韻地位 = new 音韻地位('從', '合', '三', null, '歌', '平');
  t.is(當前音韻地位.條目.length === 0, true);
});

// 3. 由音韻地位查出對應的反切

test('查「東」字的反切', (t) => {
  const 字頭 = '東';
  const res = query字頭(字頭);
  t.is(res.length, 1);
  t.is(res[0].音韻地位.反切(字頭), '德紅');
});

test('查「拯」字的反切，「拯」字無反切，值為 null', (t) => {
  const 字頭 = '拯';
  const res = query字頭(字頭);
  t.is(res.length, 1);
  t.is(res[0].音韻地位.反切(字頭), null);
});

// 4. 由音韻地位得出各項音韻屬性

test('測試「法」字對應的音韻地位的各項音韻屬性', (t) => {
  const 當前音韻地位 = new 音韻地位('幫', null, '三', null, '凡', '入');

  // 4.1. 基本音韻屬性（六個）
  t.is(當前音韻地位.母, '幫');
  t.is((當前音韻地位.呼 == null), true);
  t.is(當前音韻地位.等, '三');
  t.is((當前音韻地位.重紐 == null), true);
  t.is(當前音韻地位.韻, '凡');
  t.is(當前音韻地位.聲, '入');

  // 4.2. 拓展音韻屬性
  t.is(當前音韻地位.清濁, '全清');
  t.is(當前音韻地位.音, '脣');
  t.is(當前音韻地位.攝, '咸');

  // 4.3. 其他
  t.is(當前音韻地位.描述, '幫三凡入');
  t.is(當前音韻地位.表達式, '幫母 三等 凡韻 入聲');
  t.is(當前音韻地位.編碼, 'A5T');
  t.is(當前音韻地位.代表字, '法');
});

test('測試「祇」字對應的音韻地位的各項音韻屬性', (t) => {
  const 當前音韻地位 = new 音韻地位('羣', '開', '三', 'A', '支', '平');

  // 4.1. 基本音韻屬性（六個）
  t.is(當前音韻地位.母, '羣');
  t.is(當前音韻地位.呼, '開');
  t.is(當前音韻地位.等, '三');
  t.is(當前音韻地位.重紐, 'A');
  t.is(當前音韻地位.韻, '支');
  t.is(當前音韻地位.聲, '平');

  // 4.2. 拓展音韻屬性
  t.is(當前音韻地位.清濁, '全濁');
  t.is(當前音韻地位.音, '牙');
  t.is(當前音韻地位.攝, '止');

  // 4.3. 其他
  t.is(當前音韻地位.描述, '羣開三A支平');
  t.is(當前音韻地位.表達式, '羣母 開口 三等 重紐A類 支韻 平聲');
  t.is(當前音韻地位.編碼, 'fEQ');
  t.is(當前音韻地位.代表字, '祇');
});

// 5. 屬於

test('測試「法」字對應的音韻地位的屬於函式', (t) => {
  const 當前音韻地位 = new 音韻地位('幫', null, '三', null, '凡', '入');
  t.is(當前音韻地位.屬於('幫母'), true);
  t.is(當前音韻地位.屬於('幫精組'), true);
  t.is(當前音韻地位.屬於('精組'), false);
  t.is(當前音韻地位.屬於('重紐A類 或 重紐B類'), false);
});

// 6. 遍歷所有音韻地位

test('遍歷所有音韻地位', (t) => {
  for (const 當前音韻地位 of iter音韻地位()) {
    t.is(decode(當前音韻地位.編碼).等於(當前音韻地位), true);
  }
});
